install.packages(c("ggplot2","reshape2","plyr","dplyr","stringr"), repos="https://cloud.r-project.org")
l
frame <- data.frame(a=c(1, 2), b=c(2, 3))
colnames(frame)
colnames(frame) <- c("col1", "col2")
frame
source('~/Desktop/CS150 code/Labs/prelab9.R')
count_words(c("a", "a", "the", "a", "in", "the"))
print(count_words)
function(count_words){
print(count_words)
}
count_words(c("a", "a", "the", "a", "in", "the"))
source('~/Desktop/CS150 code/Labs/prelab9.R')
a(c("a", "a", "the", "a", "in", "the"))
count_words <- function(words){
print(count_words)
}
a(c("a", "a", "the", "a", "in", "the"))
source('~/Desktop/CS150 code/Labs/prelab9.R')
count_words(c("a", "a", "the", "a", "in", "the"))
source('~/Desktop/CS150 code/Labs/prelab9.R')
words(c("a", "a", "the", "a", "in", "the"))
count_words <- function(words){
print(count_words)
}
words(c("a", "a", "the", "a", "in", "the"))
count_words(c("a", "a", "the", "a", "in", "the"))
count_words <- function(words){
print(count_words)
}
count_words(c("a", "a", "the", "a", "in", "the"))
source('~/Desktop/CS150 code/Labs/prelab9.R')
count_words <- function(count_words){
print(count_words)
}
count_words(c("a", "a", "the", "a", "in", "the"))
source('~/Desktop/CS150 code/Labs/prelab9.R')
hi <- function(count_words){
print(count_words)
}
count_words(c("a", "a", "the", "a", "in", "the"))
hi
hi(c("a", "a", "the", "a", "in", "the"))
count_words
count_words((c("a", "a", "the", "a", "in", "the"))
count(c("a", "a", "the", "a", "in", "the"))
print(count_words)
count <- function(count_words){
print(count_words)
}
count(c("a", "a", "the", "a", "in", "the"))
count_words <- function(words){
print(words)
}
count_words(c("a", "a", "the", "a", "in", "the"))
source('~/Desktop/CS150 code/Labs/prelab9.R')
source('~/Desktop/CS150 code/Labs/prelab9.R')
a <- count(words)
source('~/Desktop/CS150 code/Labs/prelab9.R')
source('~/Desktop/CS150 code/Labs/prelab9.R')
source('~/Desktop/CS150 code/Labs/prelab9.R')
source('~/Desktop/CS150 code/Labs/prelab9.R')
source('~/Desktop/CS150 code/Labs/prelab9.R')
source('~/Desktop/CS150 code/Labs/prelab9.R')
source('~/Desktop/CS150 code/Labs/prelab9.R')
source('~/Desktop/CS150 code/Labs/prelab9.R')
for (i in 1:10) {
print(i)
}
df <- data.frame(
Artist=c("Billie Holiday","Jimi Hendrix", "Miles Davis", "SIA"),
Genre=c("Jazz", "Rock", "Jazz", "Pop"),
Listeners=c(1300000, 2700000, 1500000, 2000000),
Plays=c(27000000, 70000000, 48000000, 74000000),
stringsAsFactors = FALSE
)
df
nrow(4)
nrow(2)
nrow(df)
dim(df)
names(df)
num_names(df)
df$Artist
df$Plays
df(3,2)
df[3,2]
df[1,]
df[3,"Artist"]
df[order(df$Listeners)]
df[order(df$Listeners),]
df["Average Plays"]<- df$Plays/df$Listeners
df
df %>% group_by(Genre, Listeners) %>% summarise(mean_size=mean(Average Plays))
df %>% group_by(Genre, Listeners) %>% summarise(mean_size=mean(Plays))
library(dplyr)
df %>% group_by(Genre, Listeners) %>% summarise(mean_size=mean(Plays))
source('~/Desktop/CS150/Labs/lab9_zipf_law.R')
source('~/Desktop/CS150/Labs/lab9_zipf_law.R')
source('~/Desktop/CS150/Labs/lab9_zipf_law.R')
a <- c(1,3,4,5)
a
a + 3
a
a>3
b = a>3
b
a
sqrt(a)
a[1]
a[1:2]
a[-1]
return a+b
source('~/.active-rstudio-document')
my_add(3,4)
h <- c(1,2,3,4)
h
summary(h)
h<- c(1,2,3,4,5,6)
h
b <- c(4,564,2,112,4,35456,76,57)
summary(b)
hello <- c(1,2,3)
plot(pressure)
plot(b)
plot_test <- c(1,4,2,5,3,6)
plot(plot_test)
plot(plot())
plot(1,2,h,h)
plot(1,2,"hello","H")
plot(1,2,"hello","H",2)
pressure
temperature <- [1,2]
temperature <- c(1,2)
mean(temperature)
mean(b)
class(2500)
matrix <- rbind(c(1,2,3), c(1,2,3))
matrix
4
matrix <- rbind(c(1,2,3), c(6,5,4))
plot(matrix)
grades_dfrm
grades_dfrm <- data.frame(student_names = c("Student A", "Student B", "Student C"), test_scores = c(89,97,99), letter_grades = c("A-", "A", "A")
)
grades_dfrm
plot(grades_dfrm)
list_of_things <- list(1,2,3)
list_of_things
library(tidyverse)
install.packages(c("backports", "BH", "boot", "class", "ggplot2", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "plyr", "Rcpp", "reshape2", "scales", "spatial", "survival", "withr", "xfun"))
no
setwd("/Users/lukelorenz/Desktop/Middlebury College/Junior/DataScienceDisciplines/DataScience/Assignments/geojson")
library(shiny)
library(tidyverse)
library(leaflet)
library(geojsonio)
library(raster)
setwd("/Users/lukelorenz/Desktop/Middlebury College/Junior/DataScienceDisciplines/DataScience/Assignments/geojson")
#Read in geojson files
angola <- geojson_read("angola.json",
what = "sp")
ardra <- geojson_read("ardra.json",
what = "sp")
arguin <- geojson_read("arguin.json",
what = "sp")
bantam <- geojson_read("bantam.json",
what = "sp")
batavia <- geojson_read("batavia.json",
what = "sp")
bengalE <- geojson_read("bengalE.json",
what = "sp")
capeTown <- geojson_read("capeTown.json",
what = "sp")
ceylon <- geojson_read("ceylon.json",
what = "sp")
cGoodHope <- geojson_read("cGoodHope.json",
what = "sp")
cheribon <- geojson_read("cheribon.json",
what = "sp")
coromandel <- geojson_read("coromandel.json",
what = "sp")
dutchrep <- geojson_read("dutchrep.json",
what = "sp")
elmina <- geojson_read("elmina.json",
what = "sp")
jambi <- geojson_read("jambi.json",
what = "sp")
japan <- geojson_read("japan.json",
what = "sp")
javaNE <- geojson_read("javaNE.json",
what = "sp")
makassar <- geojson_read("makassar.json",
what = "sp")
malabar <- geojson_read("malabar.json",
what = "sp")
malacca <- geojson_read("malacca.json",
what = "sp")
mokka <- geojson_read("mokka.json",
what = "sp")
palembang <- geojson_read("palembang.json",
what = "sp")
persia <- geojson_read("persia.json",
what = "sp")
siam <- geojson_read("siam.json",
what = "sp")
spiceIslands <- geojson_read("spiceIslands.json",
what = "sp")
surat <- geojson_read("surat.json",
what = "sp")
timor <- geojson_read("timor.json",
what = "sp")
#initial join
ab <- raster::union(angola,ardra)
ab <- raster::union(ab,arguin)
ab <- raster::union(ab,bantam)
ab <- raster::union(ab,batavia)
ab <- raster::union(ab,bengalE)
ab <- raster::union(ab,capeTown)
ab <- raster::union(ab,ceylon)
ab <- raster::union(ab,cGoodHope)
ab <- raster::union(ab,cheribon)
ab <- raster::union(ab,coromandel)
ab <- raster::union(ab,dutchrep)
ab <- raster::union(ab,elmina)
ab <- raster::union(ab,jambi)
