install.packages("tidyverse")
install.packages("readxl")
install.packages("leaflet")
install.packages("rnaturalearth")
install.packages("shiny")
library(readxl)
library(leaflet)
install.packages("rlang")
install.packages("rlang")
library(readxl)
library(leaflet)
library(rnaturalearth)
library(tidyverse)
myDF <- read_excel("~/HARC/data/Week1data_1710_1715.xlsx")
a <- myDF %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long, dest_loc_port,dest_loc_lat, dest_loc_long) %>%
group_by_all() %>%
summarise(COUNT = n())
world <- ne_countries(returnclass = "sf")
#make my map just like any ggplot graph
world %>%
ggplot() +
geom_sf( aes(fill = pop_est)) +
geom_point(data = a,
mapping = aes(x = orig_loc_long, y = orig_loc_lat, color = "red")) +
theme_bw()
library(tidyverse)
install.packages("glue")
world <- ne_countries(returnclass = "sf")
library(rnaturalearth)
install.package(tidyverse)
install.packages("tidyverse")
install.packages("readxl")
install.packages("leaflet")
install.packages("rnaturalearth")
myDF <- read_excel("~/HARC/data/Week1data_1710_1715.xlsx")
myDF <- read_excel("~Home/Desktop/HARC/data/Week1data_1710_1715.xlsx")
pwd
getMethodsForDispatch()
getwd()
myDF <- read_excel("~/Home/Desktop/HARC/data/Week1data_1710_1715.xlsx")
myDF <- read_excel("Desktop/HARC/data/Week1data_1710_1715.xlsx")
a <- myDF %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long, dest_loc_port,dest_loc_lat, dest_loc_long) %>%
group_by_all() %>%
summarise(COUNT = n())
library(tidyverse)
myDF <- read_excel("Desktop/HARC/data/Week1data_1710_1715.xlsx")
a <- myDF %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long, dest_loc_port,dest_loc_lat, dest_loc_long) %>%
group_by_all() %>%
summarise(COUNT = n())
world <- ne_countries(returnclass = "sf")
library(rnaturalearth)
library(leaflet)
a <- myDF %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long, dest_loc_port,dest_loc_lat, dest_loc_long) %>%
group_by_all() %>%
summarise(COUNT = n())
world <- ne_countries(returnclass = "sf")
#make my map just like any ggplot graph
world %>%
ggplot() +
geom_sf( aes(fill = pop_est)) +
geom_point(data = a,
mapping = aes(x = orig_loc_long, y = orig_loc_lat, color = "red")) +
theme_bw()
leaflet() %>%
addTiles() %>%
addMarkers(data = myDF,
lat = ~orig_loc_lat,
lng = ~orig_loc_long)
install.packages("yaml")
leaflet() %>%
addTiles() %>%
addMarkers(data = myDF,
lat = ~orig_loc_lat,
lng = ~orig_loc_long)
leaflet(options = leafletOptions(preferCanvas = TRUE)) %>%
addTiles() %>%
addMarkers(data = myDF,
lat = ~orig_loc_lat,
lng = ~orig_loc_long)
myDF <- read_excel("Desktop/HARC/data/Week1data_1710_1715.xlsx")
a <- myDF %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long, dest_loc_port,dest_loc_lat, dest_loc_long) %>%
group_by_all() %>%
summarise(COUNT = n())
world <- ne_countries(returnclass = "sf")
#make my map just like any ggplot graph
world %>%
ggplot() +
geom_sf( aes(fill = pop_est)) +
geom_point(data = a,
mapping = aes(x = orig_loc_long, y = orig_loc_lat, color = "red")) +
theme_bw()
leaflet(options = leafletOptions(preferCanvas = TRUE)) %>%
addTiles() %>%
addMarkers(data = myDF,
lat = ~orig_loc_lat,
lng = ~orig_loc_long)
View(myDF)
View(myDF)
leaflet() %>%
addTiles()
library(tidyverse)
library(leaflet)
leaflet() %>%
addTiles()
leaflet() %>%
addTiles() %>%
addMarkers()
small.data <- tibble(x = 48.2082,
y = 16.3738,
name = "Vienna")
small.data %>%
leaflet() %>%
addTiles() %>%
addMarkers()
small.data <- tibble(longitude = 48.2082,
latitude = 16.3738,
name = "Vienna")
small.data %>%
leaflet() %>%
addTiles() %>%
addMarkers()
small.data <- tibble(latitude = 48.2082,
longitude = 16.3738,
name = "Vienna")
small.data %>%
leaflet() %>%
addTiles() %>%
addMarkers()
a
myDF <- read_excel("Desktop/HARC/data/Week1data_1710_1715.xlsx")
a <- myDF %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long, dest_loc_port,dest_loc_lat, dest_loc_long) %>%
group_by_all() %>%
summarise(COUNT = n())
myDF <- read_excel("Desktop/HARC/data/Week1data_1710_1715.xlsx")
library(readxl)
library(leaflet)
library(rnaturalearth)
myDF <- read_excel("Desktop/HARC/data/Week1data_1710_1715.xlsx")
a <- myDF %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long, dest_loc_port,dest_loc_lat, dest_loc_long) %>%
group_by_all() %>%
summarise(COUNT = n())
a
a %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long) %>%
leaflet() %>%
addTiles() %>%
addMarkers()
a %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long) %>%
leaflet() %>%
addTiles() %>%
addMarkers( lat = ~orig_loc_lat,
long = ~orig_loc_long)
a %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long) %>%
leaflet() %>%
addTiles() %>%
addMarkers( lat = ~orig_loc_lat,
long = ~orig_loc_long)
a %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long) %>%
leaflet() %>%
addTiles() %>%
addMarkers( lat = ~orig_loc_lat,
long = ~orig_loc_long
)
install.packages("leaflet")
a %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long) %>%
leaflet() %>%
addTiles() %>%
addMarkers( lat = ~orig_loc_lat,
long = ~orig_loc_long
)
a %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long) %>%
leaflet() %>%
addTiles() %>%
addMarkers( lat = orig_loc_lat,
long = orig_loc_long
)
a %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long) %>%
leaflet() %>%
addTiles() %>%
addMarkers( lat = ~orig_loc_lat,
long = ~orig_loc_long
)
View(a)
a %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long) %>%
leaflet() %>%
addTiles() %>%
addMarkers( lat = ~orig_loc_lat,
long = ~orig_loc_long,
lable = ~orig_loc_port_modern
)
a %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long) %>%
leaflet() %>%
addTiles() %>%
addMarkers( lat = ~orig_loc_lat,long = ~orig_loc_long, lable = ~orig_loc_port_modern)
a %>%
leaflet() %>%
addTiles() %>%
addMarkers( lat = ~orig_loc_lat,long = ~orig_loc_long, lable = ~orig_loc_port_modern)
a <- myDF %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long, dest_loc_port,dest_loc_lat, dest_loc_long) %>%
group_by_all() %>%
summarise(COUNT = n()) %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long) %>%
world <- ne_countries(returnclass = "sf")
a <- myDF %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long, dest_loc_port,dest_loc_lat, dest_loc_long) %>%
group_by_all() %>%
summarise(COUNT = n()) %>%
select(orig_loc_port_modern, orig_loc_lat, orig_loc_long)
a %>%
leaflet() %>%
addTiles() %>%
addMarkers( lat = ~orig_loc_lat,long = ~orig_loc_long, lable = ~orig_loc_port_modern)
a %>%
leaflet() %>%
addTiles() %>%
leaflet::addMarkers( lat = ~orig_loc_lat,long = ~orig_loc_long, lable = ~orig_loc_port_modern)
a %>%
leaflet::leaflet() %>%
leaflet::addTiles() %>%
leaflet::addMarkers( lat = ~orig_loc_lat,long = ~orig_loc_long, lable = ~orig_loc_port_modern)
devtools::install_github('rstudio/leaflet')
install.packages("devtools")
install.packages("devtools")
small.data %>%
leaflet() %>%
addTiles() %>%
addMarkers()
leaflet::
a %>%
leaflet::leaflet() %>%
leaflet::addTiles() %>%
leaflet::addMarkers( lat = ~orig_loc_lat,long = ~orig_loc_long, lable = ~orig_loc_port_modern)
small.data <- tibble(latitude = 48.2082,
longitude = 16.3738,
name = "Vienna")
small.data <- tibble(x = 48.2082,
y = 16.3738,
name = "Vienna")
small.data %>%
leaflet() %>%
addTiles() %>%
addMarkers(lat = ~x,long = ~y, lable = ~x)
shiny::runApp('Downloads/drive-download-20220131T194100Z-001/finalProject')
textile.data<- read_xlsx("WICVOC012021.xlsx")
#Takes schock and changes to pieces, takes half ps and changes to ps
assign3<- textile.data %>% mutate(real_quantity = 0) #create real value collumn
for(i in 1:length(textile.data$textile_unit)){
if (assign3$textile_unit[i] %in% c("schock", "Schock")){ #fix the schock unit (x4)
assign3$real_quantity[i] <- as.numeric(textile.data$textile_quantity[i])*4
}
else if(assign3$textile_unit[i] == "half ps."){ #fix the half ps. unit (/2)
assign3$real_quantity[i] <- as.numeric(textile.data$textile_quantity[i])/2
}
else  if(assign3$textile_unit[i] == "el"){
assign3$real_quantity[i] <- as.numeric(textile.data$textile_quantity[i])*as.numeric(textile.data$els_per_ps[i], na.rm = TRUE)
}
else{
assign3$real_quantity[i] <- as.numeric(textile.data$textile_quantity[i]) #for now ignore rolls, els, and lbs- filter these units out in analysis
}
}
library(shiny)
library(tidyverse)
library(leaflet)
library(geojsonio)
library(raster)
library("readxl")
library(debkeepr)
library(sp)
library(rnaturalearth)
library(WDI)
library(tigris)
options(scipen = 100000)
textile.data<- read_xlsx("WICVOC012021.xlsx")
#Takes schock and changes to pieces, takes half ps and changes to ps
assign3<- textile.data %>% mutate(real_quantity = 0) #create real value collumn
for(i in 1:length(textile.data$textile_unit)){
if (assign3$textile_unit[i] %in% c("schock", "Schock")){ #fix the schock unit (x4)
assign3$real_quantity[i] <- as.numeric(textile.data$textile_quantity[i])*4
}
else if(assign3$textile_unit[i] == "half ps."){ #fix the half ps. unit (/2)
assign3$real_quantity[i] <- as.numeric(textile.data$textile_quantity[i])/2
}
else  if(assign3$textile_unit[i] == "el"){
assign3$real_quantity[i] <- as.numeric(textile.data$textile_quantity[i])*as.numeric(textile.data$els_per_ps[i], na.rm = TRUE)
}
else{
assign3$real_quantity[i] <- as.numeric(textile.data$textile_quantity[i]) #for now ignore rolls, els, and lbs- filter these units out in analysis
}
}
otherdata <- read_csv("withLocations.csv")
assign3$orig_loc_lat <- otherdata$orig_loc_lat
textile.data<- read_xlsx("WICVOC012021.xlsx")
setwd("~/Downloads/drive-download-20220131T194100Z-001/finalProject")
textile.data<- read_xlsx("WICVOC012021.xlsx")
#Takes schock and changes to pieces, takes half ps and changes to ps
assign3<- textile.data %>% mutate(real_quantity = 0) #create real value collumn
for(i in 1:length(textile.data$textile_unit)){
if (assign3$textile_unit[i] %in% c("schock", "Schock")){ #fix the schock unit (x4)
assign3$real_quantity[i] <- as.numeric(textile.data$textile_quantity[i])*4
}
else if(assign3$textile_unit[i] == "half ps."){ #fix the half ps. unit (/2)
assign3$real_quantity[i] <- as.numeric(textile.data$textile_quantity[i])/2
}
else  if(assign3$textile_unit[i] == "el"){
assign3$real_quantity[i] <- as.numeric(textile.data$textile_quantity[i])*as.numeric(textile.data$els_per_ps[i], na.rm = TRUE)
}
else{
assign3$real_quantity[i] <- as.numeric(textile.data$textile_quantity[i]) #for now ignore rolls, els, and lbs- filter these units out in analysis
}
}
otherdata <- read_csv("withLocations.csv")
assign3$orig_loc_lat <- otherdata$orig_loc_lat
assign3$orig_loc_long <- otherdata$orig_loc_long
assign3$dest_loc_lat <- otherdata$dest_loc_lat
assign3$dest_loc_long <- otherdata$dest_loc_long
#Accounting for odd naming convention
for(i in 1:length(textile.data$textile_unit)){
if (assign3$orig_loc_region_modern[i] %in% c("Netherlands")){
assign3$orig_loc_region_arch[i] <- "Dutch Republic"
}
}
assign3 <- assign3 %>%
mutate(piece_rate = as.numeric(total_value_guldens)/as.numeric(real_quantity))
slavetrade.data <- read.csv("SlaveTrade.csv")
mutated.slavetrade.data <- slavetrade.data %>%
mutate(new_yr = as.numeric(substr(slavetrade.data$`Date.that.voyage.began`, 1,4))) #Takes substring gets the year
joined.ship.data <- textile.data %>%
inner_join(mutated.slavetrade.data, by = c("means_of_exchange" = "Vessel.name",
"orig_yr" = "new_yr"))
View(assign3)
runApp()
View(assign3)
View(assign3)
runApp()
runApp()
#live loading of shiny app
options(shiny.autoreload = TRUE)
runApp()
runApp()
#live loading of shiny app
options(shiny.autoreload = TRUE)
runApp()
runApp()
runApp()
runApp()
