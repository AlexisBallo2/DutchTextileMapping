)
xlim(0,5000)
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 100,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 100,
color = textile_color_arch,
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 100,
color = assign3$textile_color_arch,
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 100,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
runApp()
#live loading of shiny app
options(shiny.reactlog= TRUE)
runApp()
server <- function(input, output, session) {
output$selectedCountry <- renderText({
if(is_null(input$map_shape_click$id)) {
"Please Select a Location"
} else {
input$map_shape_click$id
}
})
#the third dropdown with the textile names!!
output$dropdown <- renderLeaflet({
switch_func(input,session)
})
reset_map(output,input, NULL)
#the bottom plots
output$plot <- renderPlotly({
if(is.null(input$map_shape_click$id)){
#something to show before a location is clicked
#not workign yet...
print("here still")
df <- data.frame(
label=c("No available data"),
x = c(1.5), y =c(1.5))
g <- ggplot(df, aes(x=x, y=y, label=label)) + geom_text(mapping = aes(x = x, y = y), size = 10)
ggplotly(g)
# Graph of textile name and the value that was sent, filled with something(quantity?)
}
#if the input is a textile... graph it
if(input$inputChoice_two %in% unique(assign3$textile_name)) {
print("x here")
reset_map(output,input, input$map_shape_click$id)
data <-  assign3 %>%
filter(orig_loc_region_arch == input$map_shape_click$id)%>%
filter(textile_name == input$inputChoice_two )
print(paste("count: ", count(data)))
if(count(data) == 0) {
df <- data.frame(
label=c("No available data"),
x = c(1.5), y =c(1.5))
ggplot(df, aes(x=x, y=y, label=label)) + geom_text(mapping = aes(x = x, y = y), size = 10)
} else {
data %>%
ggplot() +
geom_col(aes(x = dest_yr, y = as.numeric(real_quantity)),
fill = "#FB8B24") +
theme_bw() +
labs(title = paste("The quantity of", input$inputChoice_two, "from", input$map_shape_click$id, "exported by year"), x ="Year", y = "Total Quantity")
}
} else {
switch(input$inputChoice_two,
"All" = {
#Change graph back to normal
reset_map(output,input, NULL)
g<- assign3 %>%
group_by(orig_loc_port_arch, textile_name) %>%
filter(piece_rate < 20) %>% #For now, filtering by cheap pieces
filter(orig_loc_region_arch == input$map_shape_click$id) %>%
summarise(total_value = sum(real_guldens))%>%
ggplot()+
geom_tile(aes(x = orig_loc_port_arch, y= textile_name, fill = total_value))+
labs(title = paste("A chart of all exports from", input$map_shape_click$id, "ports") ,x = "Origin Port", y = "Textile") +
guides(fill=guide_legend(title="Mean Value per Piece")) +
scale_fill_gradient(low = "#460B2F", high = "#E36414", na.value = NA)
ggplotly(g)
},
"Both" ={
#Change the graph back to normal
reset_map(output,input, NULL)
assign3 %>%
filter(orig_loc_region_arch == input$map_shape_click$id)%>%
ggplot() +
geom_col(aes(x = dest_yr, y = as.numeric(real_quantity)),
fill = "#FB8B24") +
theme_bw() +
labs(title = paste("Quanity of Textiles Shipped out of",input$map_shape_click$id ,"by Both VOC/WIC"), x ="Year", y = "Total Quantity")
},
"WIC" = {
reset_map(output,input, NULL)
dataforWIC <- assign3 %>%
filter(orig_loc_region_arch == input$map_shape_click$id)%>%
filter(company == "WIC")
if(nrow(dataforWIC) == 0) {
df <- data.frame(
label=c("No available data"),
x = c(1.5), y =c(1.5))
ggplot(df, aes(x=x, y=y, label=label)) + geom_text(mapping = aes(x = x, y = y), size = 10)
} else {
dataforWIC %>%
ggplot() +
geom_col(aes(x = dest_yr, y = as.numeric(real_quantity)),
fill = "#FB8B24") +
theme_bw() +
labs(title = paste("Quanity of Textiles Shipped out of",input$map_shape_click$id ,"by the", input$inputChoice_two, "Company"), x ="Year", y = "Total Quantity")
}
},
"VOC" = {
#Change the graph back to normal
reset_map(output,input, NULL)
dataforVOC <- assign3 %>%
filter(orig_loc_region_arch == input$map_shape_click$id)%>%
filter(company == "VOC")
if(nrow(dataforVOC) == 0) {
df <- data.frame(
label=c("No available data"),
x = c(1.5), y =c(1.5))
ggplot(df, aes(x=x, y=y, label=label)) + geom_text(mapping = aes(x = x, y = y), size = 10)
} else {
dataforVOC %>%
ggplot() +
geom_col(aes(x = dest_yr, y = as.numeric(real_quantity)),
fill = "#FB8B24") +
theme_bw() +
labs(title = paste("Quanity of Textiles Shipped out of",input$map_shape_click$id ,"by the", input$inputChoice_two, "Company"), x ="Year", y = "Total Quantity")
}
},
"Origin" = {
origin_map(input,output,session)
}
,
"Destination" = {
destination_map(input,output,session)
},
"Year" = {
reset_map(output,input, NULL)
require(scales)
temp <- assign3 %>%
filter(orig_loc_region_arch == input$map_shape_click$id)
if(nrow(temp) == 0) {
df <- data.frame(
label=c("No available data"),
x = c(1.5), y =c(1.5))
ggplot(df, aes(x=x, y=y, label=label)) +
geom_text(mapping = aes(x = x, y = y), size = 10)+
labs(x= "",y="")
} else {
temp2 <- aggregate(as.numeric(temp$real_quantity), by = list(year = temp$orig_yr), FUN = sum,na.rm=TRUE)
ggplot(data = temp2) +
geom_col(mapping = aes(x = as.factor(year),
y = x,
fill = "#FB8B24",
)) +
theme(legend.position = "none") +
labs(title = "Total Quantity of All Textiles Shipped", x = "Year", y = "Textile Quantity") +
scale_fill_manual(values=c("#FB8B24"))
}
},
"Color" = {
reset_map(output,input, NULL)
assign3$textile_color_arch = toupper(assign3$textile_color_arch)
assign3$textile_color_arch = str_replace(assign3$textile_color_arch, "BROWN-BLUE", "BROWN BLUE")
assign3$textile_color_arch = str_replace(assign3$textile_color_arch, "BLUE / AZURE", "BLUE")
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 100,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
# facet_wrap(~(textile_color_arch)
)
},
"Pattern" = {
}
)
}
})
}}
runApp()
runApp()
runApp()
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 25,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 50,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 5000,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 500,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 50,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 75,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 75,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000) +
facet_wrap(~(textile_color_arch)
},
"Pattern" = {
}
)
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 75,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000) +
facet_wrap(~(textile_color_arch))
runApp()
#HISTOGRAM FOR COLOR DISTRIBUTION
assign3 %>%
na.omit(assign3) %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 75,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", "Textile Color"), x = "Textile quantity (singular shipment)") +
xlim(0,5000) +
facet_wrap(~(textile_color_arch))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data <-  assign3 %>%
filter(orig_loc_region_arch == input$map_shape_click$id)%>%
filter(textile_name == input$inputChoice_two )
data <-  assign3 %>%
filter(orig_loc_region_arch == input$map_shape_click$id)%>%
filter(textile_name == input$inputChoice_two )
runApp()
runApp()
runApp()
View(assign3Temp)
View(assign3)
View(assign3)
runApp()
runApp()
runApp()
runApp()
data <- assign3 %>%
filter(orig_loc_region_arch == input$map_shape_click$id)%>%
filter(textile_color_arch == input$inputChoice_two)
data <- assign3 %>%
filter(orig_loc_region_arch == input$map_shape_click$id)%>%
filter(textile_color_arch == input$inputChoice_two)
data <- assign3 %>%
filter(orig_loc_region_arch == "Dutch Republic")%>%
filter(textile_color_arch == "blue")
View(data)
data <- assign3 %>%
filter(orig_loc_region_arch == input$map_shape_click$id)
data <- assign3 %>%
filter(orig_loc_region_arch == "dutch republic")
data <- assign3 %>%
filter(orig_loc_region_arch == "Dutch Republic")
View(data)
data <-  data %>% filter(textile_color_arch == "BLUE")
View(data)
runApp()
data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 25,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 25,
color = "black",
fill = "black"
) +
# labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
runApp()
g<-data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 25,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
ggplotly(g)
g<-data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 25,
color = "black",
fill = "black"
) +
# labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
ggplotly(g)
View(data)
g<-data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 25,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
View(g)
ggplotly(g)
runApp()
g<-data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 100,
color = "black",
fill = "black"
) +
labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
g<-data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 100,
color = "black",
fill = "black"
) +
# labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
ggplotly(g)
g<-data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 75,
color = "black",
fill = "black"
) +
# labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
ggplotly(g)
g<-data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 69,
color = "black",
fill = "black"
) +
# labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
ggplotly(g)
g<-data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 40,
color = "black",
fill = "black"
) +
# labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
ggplotly(g)
g<-data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 5,
color = "black",
fill = "black"
) +
# labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
ggplotly(g)
runApp()
runApp()
runApp()
runApp()
runApp()
g<-data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 25,
color = "darkblue",
fill = "black"
) +
# labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
g<-data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 25,
color = "darkblue",
fill = "black"
) +
# labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
g<-data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 25,
color = "blue",
fill = "black"
) +
# labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
g<-data %>%
ggplot()+
geom_histogram(mapping = aes(x = as.numeric(real_quantity)),
bins = 25,
color = "blue",
fill = "black"
) +
# labs(title = paste("Distribution of shipment sizes based on", input$inputChoice_two, "from", input$map_shape_click$id), x = "Textile quantity (singular shipment)") +
xlim(0,5000)
runApp()
